
5.6 Counting using the range() function
The range() function

While loops are commonly used for counting a specific number of iterations, and for loops are commonly used to iterate over all elements of a container. The range() function allows counting in for loops as well. range() generates a sequence of integers between a starting integer that is included in the range, an ending integer that is not included in the range, and an integer step value. The sequence is generated by starting at the start integer and incrementing by the step value until the ending integer is reached or surpassed.

The range() function can take up to three integer arguments.

    range(Y) generates a sequence of all non-negative integers less than Y.
    Ex: range(3) creates the sequence 0, 1, 2.
    range(X, Y) generates a sequence of all integers >= X and < Y.
    Ex: range(-7, -3) creates the sequence -7, -6, -5, -4.
    range(X, Y, Z), where Z is positive, generates a sequence of all integers >= X and < Y, incrementing by Z.
    Ex: range(0, 50, 10) creates the sequence 0, 10, 20, 30, 40.
    range(X, Y, Z), where Z is negative, generates a sequence of all integers <= X and > Y, incrementing by Z.
    Ex: range(3, -1, -1) creates the sequence 3, 2, 1, 0.

Table 5.6.1: Using the range() function.
Range 	Generated sequence 	Explanation
range(5)

0 1 2 3 4

	Every integer from 0 to 4.
range(0, 5)

0 1 2 3 4

	Every integer from 0 to 4.
range(3, 7)

3 4 5 6

	Every integer from 3 to 6.
range(10, 13)

10 11 12

	Every integer from 10 to 12.
range(0, 5, 1)

0 1 2 3 4

	Every 1 integer from 0 to 4.
range(0, 5, 2)

0 2 4

	Every 2nd integer from 0 to 4.
range(5, 0, -1)

5 4 3 2 1

	Every 1 integer from 5 down to 1
range(5, 0, -2)

5 3 1

	Every 2nd integer from 5 down to 1

Evaluating the range() function creates a new "range" type object. Ranges represent an arithmetic progression, i.e., some sequence of integers with a start, end, and step between integers. The range type is a sequence type like lists and tuples, but is immutable. In general, range objects are only used as a part of a for loop statement.
zyDE 5.6.1: For loop example: Calculating yearly savings.

The below program uses a for loop to calculate savings and interest. Try changing the range() function to print every three years instead, using the three-argument alternate version of range(). Modify the interest calculation inside the loop to compute three years worth of savings instead of one.


participation activity
5.6.1: The range() function.
1)
What sequence is generated by range(7)?
2)
What sequence is generated by range(2, 5)?
participation activity
5.6.2: The range() function.

Write the simplest range() function that generates the appropriate sequence of integers.
1)
Every integer from 0 to 500.

2)
Every integer from 10 to 20

3)
Every 2nd integer from 10 to 20

4)
Every integer from 5 down to -5

challenge activity
5.6.1: Enter the for loop's output.
343716.2144758.qx3zqy7

Type the program's output
for i in range(4):
    print(i, end=' ')

1
2
3
1
2
3
How was this section?
Activity summary for assignment:
1097 / 1097 pts
Due: 12/10/2021, 11:59 PM CST
1097 / 1097 pts submitted to canvas
5.7 While vs. for loops
